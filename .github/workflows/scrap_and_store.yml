name: Scrape and Store Data

on:
  schedule:
    - cron: '0 0 * * *'
    - cron: '5 10 * * *'
    - cron: '0 6 * * 0'
  workflow_dispatch:

jobs:
  scrape_and_store:
    runs-on: ubuntu-latest
    environment: production   # <-- Specify your environment name here

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ vars.MYSQL_ROOT_PASSWORD }}   # Use the environment variable
          MYSQL_DATABASE: ${{ vars.MYSQL_DATABASE }}
          MYSQL_USER: ${{ vars.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ vars.MYSQL_PASSWORD }}
        ports:
          - 3306:3306

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..10}; do
            if mysql -h127.0.0.1 -u"${{ vars.MYSQL_USER }}" -p"${{ vars.MYSQL_PASSWORD }}" -e "SELECT 1" ${{ vars.MYSQL_DATABASE }}; then
              echo "MySQL is up and ready!"
              break
            fi
            echo "Waiting for MySQL... ($i/10)"
            sleep 5
          done

      - name: Run the database migration
        run: python migrate_sqlite_to_mysql.py
        env:
          MYSQL_HOST: ${{ vars.MYSQL_HOST }}
          MYSQL_USER: ${{ vars.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ vars.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ vars.MYSQL_DATABASE }}

      - name: Run the scraper
        run: python fetch_data.py
        env:
          MYSQL_HOST: ${{ vars.MYSQL_HOST }}
          MYSQL_USER: ${{ vars.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ vars.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ vars.MYSQL_DATABASE }}
